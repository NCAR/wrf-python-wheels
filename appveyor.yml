environment:
  global:
      BUILD_COMMIT: letmaik/wheel
      TEST_DEPENDS: numpy==1.13.1 wrapt
      MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
      MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
      #WHEELHOUSE_UPLOADER_USERNAME: travis-worker
      #WHEELHOUSE_UPLOADER_SECRET:
      #  secure:
      #      jIyaD+VWmTlDGXThsKAkiLq8iljgYHiriq+kEUuW9tHj67R5BapLxLjbfco2nt8Y

  matrix:
    - PYTHON: C:\Python36
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 32
      NUMPY_BUILD_DEP: numpy==1.12.1

    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64
      NUMPY_BUILD_DEP: numpy==1.12.1

    - PYTHON: C:\Python35
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 32
      NUMPY_BUILD_DEP: numpy==1.10.4

    - PYTHON: C:\Python35-x64
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 64
      NUMPY_BUILD_DEP: numpy==1.10.4

    - PYTHON: C:\Python34
      PYTHON_VERSION: 3.4
      PYTHON_ARCH: 32
      NUMPY_BUILD_DEP: numpy==1.10.4

    - PYTHON: C:\Python34-x64
      PYTHON_VERSION: 3.4
      PYTHON_ARCH: 64
      NUMPY_BUILD_DEP: numpy==1.10.4

    - PYTHON: C:\Python27
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 32
      NUMPY_BUILD_DEP: numpy==1.10.4

    - PYTHON: C:\Python27-x64
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 64
      NUMPY_BUILD_DEP: numpy==1.10.4

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

install:
  - cmd: echo "Filesystem root:"
  - dir C:\

  - echo "Installed SDKs:"
  - dir "C:/Program Files/Microsoft SDKs/Windows"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version
  - >-
     python -c "import sys,platform,struct;
     print(sys.platform, platform.machine(), struct.calcsize('P') * 8, )"

  # Get needed submodules
  - git submodule update --init --recursive

  # Upgrade to the latest pip and setuptools.
  - python -m pip install -U pip setuptools

  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install "wheel==0.26"

  # Install build requirements.
  - pip install --only-binary numpy "%NUMPY_BUILD_DEP%"

  # Replace numpy distutils with a version that can build with msvc + mingw-gfortran.
  - ps: |
      $NumpyDir = $((python -c 'import os; import numpy; print(os.path.dirname(numpy.__file__))') | Out-String).Trim()
      rm -r -Force "$NumpyDir\distutils"
      mv numpy-distutils\numpy\distutils $NumpyDir
      rm -r -Force "$NumpyDir\compat"
      mv numpy-distutils\numpy\compat $NumpyDir

build_script:
  - cd wrf-python
  - git checkout %BUILD_COMMIT%
  # Build wheel using setup.py
  - ps: |
      $PYTHON_ARCH = $env:PYTHON_ARCH
      If ($PYTHON_ARCH -eq 32) {
          $MINGW = $env:MINGW_32
      } Else {
          $MINGW = $env:MINGW_64
      }
      $env:Path += ";$MINGW"
  - python setup.py bdist_wheel
  - ps: |
      # Upload artifact to Appveyor immediately after build
      ls dist -r | Foreach-Object {
          appveyor PushArtifact $_.FullName
          pip install $_.FullName
      }

before_test:
  # Install runtime/test requirements.
  - python -m pip install %TEST_DEPENDS%

test_script:
  - cd ..
  - mkdir tmp_test
  - cd tmp_test
  - python -c "import wrf"

